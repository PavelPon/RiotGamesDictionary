//
// ModelMatchInfoInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ModelMatchInfoInfo: Codable, JSONEncodable, Hashable {

    public var endOfGameResult: String
    public var gameCreation: Double
    public var gameDuration: Double
    public var gameEndTimestamp: Double
    public var gameId: Double
    public var gameMode: String
    public var gameName: String
    public var gameStartTimestamp: Double
    public var gameType: String
    public var gameVersion: String
    public var mapId: Double
    public var participants: [ModelMatchInfoInfoParticipantsInner]
    public var platformId: String
    public var queueId: Double
    public var teams: [ModelMatchInfoInfoTeamsInner]
    public var tournamentCode: String

    public init(endOfGameResult: String, gameCreation: Double, gameDuration: Double, gameEndTimestamp: Double, gameId: Double, gameMode: String, gameName: String, gameStartTimestamp: Double, gameType: String, gameVersion: String, mapId: Double, participants: [ModelMatchInfoInfoParticipantsInner], platformId: String, queueId: Double, teams: [ModelMatchInfoInfoTeamsInner], tournamentCode: String) {
        self.endOfGameResult = endOfGameResult
        self.gameCreation = gameCreation
        self.gameDuration = gameDuration
        self.gameEndTimestamp = gameEndTimestamp
        self.gameId = gameId
        self.gameMode = gameMode
        self.gameName = gameName
        self.gameStartTimestamp = gameStartTimestamp
        self.gameType = gameType
        self.gameVersion = gameVersion
        self.mapId = mapId
        self.participants = participants
        self.platformId = platformId
        self.queueId = queueId
        self.teams = teams
        self.tournamentCode = tournamentCode
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case endOfGameResult
        case gameCreation
        case gameDuration
        case gameEndTimestamp
        case gameId
        case gameMode
        case gameName
        case gameStartTimestamp
        case gameType
        case gameVersion
        case mapId
        case participants
        case platformId
        case queueId
        case teams
        case tournamentCode
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(endOfGameResult, forKey: .endOfGameResult)
        try container.encode(gameCreation, forKey: .gameCreation)
        try container.encode(gameDuration, forKey: .gameDuration)
        try container.encode(gameEndTimestamp, forKey: .gameEndTimestamp)
        try container.encode(gameId, forKey: .gameId)
        try container.encode(gameMode, forKey: .gameMode)
        try container.encode(gameName, forKey: .gameName)
        try container.encode(gameStartTimestamp, forKey: .gameStartTimestamp)
        try container.encode(gameType, forKey: .gameType)
        try container.encode(gameVersion, forKey: .gameVersion)
        try container.encode(mapId, forKey: .mapId)
        try container.encode(participants, forKey: .participants)
        try container.encode(platformId, forKey: .platformId)
        try container.encode(queueId, forKey: .queueId)
        try container.encode(teams, forKey: .teams)
        try container.encode(tournamentCode, forKey: .tournamentCode)
    }
}

