//
// ModelMatchInfoInfoParticipantsInner.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ModelMatchInfoInfoParticipantsInner: Codable, JSONEncodable, Hashable {

    public var allInPings: Double?
    public var assistMePings: Double?
    public var assists: Double?
    public var baronKills: Double?
    public var basicPings: Double?
    public var bountyLevel: Double?
    public var champExperience: Double?
    public var champLevel: Double?
    public var championId: Double?
    public var championName: String?
    public var championTransform: Double?
    public var commandPings: Double?
    public var consumablesPurchased: Double?
    public var damageDealtToBuildings: Double?
    public var damageDealtToObjectives: Double?
    public var damageDealtToTurrets: Double?
    public var damageSelfMitigated: Double?
    public var dangerPings: Double?
    public var deaths: Double?
    public var detectorWardsPlaced: Double?
    public var doubleKills: Double?
    public var dragonKills: Double?
    public var eligibleForProgression: Bool?
    public var enemyMissingPings: Double?
    public var enemyVisionPings: Double?
    public var firstBloodAssist: Bool?
    public var firstBloodKill: Bool?
    public var firstTowerAssist: Bool?
    public var firstTowerKill: Bool?
    public var gameEndedInEarlySurrender: Bool?
    public var gameEndedInSurrender: Bool?
    public var getBackPings: Double?
    public var goldEarned: Double?
    public var goldSpent: Double?
    public var holdPings: Double?
    public var individualPosition: String?
    public var inhibitorKills: Double?
    public var inhibitorTakedowns: Double?
    public var inhibitorsLost: Double?
    public var item0: Double?
    public var item1: Double?
    public var item2: Double?
    public var item3: Double?
    public var item4: Double?
    public var item5: Double?
    public var item6: Double?
    public var itemsPurchased: Double?
    public var killingSprees: Double?
    public var kills: Double?
    public var lane: String?
    public var largestCriticalStrike: Double?
    public var largestKillingSpree: Double?
    public var largestMultiKill: Double?
    public var longestTimeSpentLiving: Double?
    public var magicDamageDealt: Double?
    public var magicDamageDealtToChampions: Double?
    public var magicDamageTaken: Double?
    public var missions: ModelMatchInfoInfoParticipantsInnerMissions?
    public var needVisionPings: Double?
    public var neutralMinionsKilled: Double?
    public var nexusKills: Double?
    public var nexusLost: Double?
    public var nexusTakedowns: Double?
    public var objectivesStolen: Double?
    public var objectivesStolenAssists: Double?
    public var onMyWayPings: Double?
    public var participantId: Double?
    public var pentaKills: Double?
    public var perks: ModelMatchInfoInfoParticipantsInnerPerks?
    public var physicalDamageDealt: Double?
    public var physicalDamageDealtToChampions: Double?
    public var physicalDamageTaken: Double?
    public var placement: Double?
    public var playerAugment1: Double?
    public var playerAugment2: Double?
    public var playerAugment3: Double?
    public var playerAugment4: Double?
    public var playerScore0: Double?
    public var playerScore1: Double?
    public var playerScore10: Double?
    public var playerScore11: Double?
    public var playerScore2: Double?
    public var playerScore3: Double?
    public var playerScore4: Double?
    public var playerScore5: Double?
    public var playerScore6: Double?
    public var playerScore7: Double?
    public var playerScore8: Double?
    public var playerScore9: Double?
    public var playerSubteamId: Double?
    public var profileIcon: Double?
    public var pushPings: Double?
    public var puuid: String?
    public var quadraKills: Double?
    public var riotIdGameName: String?
    public var riotIdTagline: String?
    public var role: String?
    public var sightWardsBoughtInGame: Double?
    public var spell1Casts: Double?
    public var spell2Casts: Double?
    public var spell3Casts: Double?
    public var spell4Casts: Double?
    public var subteamPlacement: Double?
    public var summoner1Casts: Double?
    public var summoner1Id: Double?
    public var summoner2Casts: Double?
    public var summoner2Id: Double?
    public var summonerId: String?
    public var summonerLevel: Double?
    public var summonerName: String?
    public var teamEarlySurrendered: Bool?
    public var teamId: Double?
    public var teamPosition: String?
    public var timeCCingOthers: Double?
    public var timePlayed: Double?
    public var totalAllyJungleMinionsKilled: Double?
    public var totalDamageDealt: Double?
    public var totalDamageDealtToChampions: Double?
    public var totalDamageShieldedOnTeammates: Double?
    public var totalDamageTaken: Double?
    public var totalEnemyJungleMinionsKilled: Double?
    public var totalHeal: Double?
    public var totalHealsOnTeammates: Double?
    public var totalMinionsKilled: Double?
    public var totalTimeCCDealt: Double?
    public var totalTimeSpentDead: Double?
    public var totalUnitsHealed: Double?
    public var tripleKills: Double?
    public var trueDamageDealt: Double?
    public var trueDamageDealtToChampions: Double?
    public var trueDamageTaken: Double?
    public var turretKills: Double?
    public var turretTakedowns: Double?
    public var turretsLost: Double?
    public var unrealKills: Double?
    public var visionClearedPings: Double?
    public var visionScore: Double?
    public var visionWardsBoughtInGame: Double?
    public var wardsKilled: Double?
    public var wardsPlaced: Double?
    public var win: Bool?

    public init(allInPings: Double? = nil, assistMePings: Double? = nil, assists: Double? = nil, baronKills: Double? = nil, basicPings: Double? = nil, bountyLevel: Double? = nil, champExperience: Double? = nil, champLevel: Double? = nil, championId: Double? = nil, championName: String? = nil, championTransform: Double? = nil, commandPings: Double? = nil, consumablesPurchased: Double? = nil, damageDealtToBuildings: Double? = nil, damageDealtToObjectives: Double? = nil, damageDealtToTurrets: Double? = nil, damageSelfMitigated: Double? = nil, dangerPings: Double? = nil, deaths: Double? = nil, detectorWardsPlaced: Double? = nil, doubleKills: Double? = nil, dragonKills: Double? = nil, eligibleForProgression: Bool? = nil, enemyMissingPings: Double? = nil, enemyVisionPings: Double? = nil, firstBloodAssist: Bool? = nil, firstBloodKill: Bool? = nil, firstTowerAssist: Bool? = nil, firstTowerKill: Bool? = nil, gameEndedInEarlySurrender: Bool? = nil, gameEndedInSurrender: Bool? = nil, getBackPings: Double? = nil, goldEarned: Double? = nil, goldSpent: Double? = nil, holdPings: Double? = nil, individualPosition: String? = nil, inhibitorKills: Double? = nil, inhibitorTakedowns: Double? = nil, inhibitorsLost: Double? = nil, item0: Double? = nil, item1: Double? = nil, item2: Double? = nil, item3: Double? = nil, item4: Double? = nil, item5: Double? = nil, item6: Double? = nil, itemsPurchased: Double? = nil, killingSprees: Double? = nil, kills: Double? = nil, lane: String? = nil, largestCriticalStrike: Double? = nil, largestKillingSpree: Double? = nil, largestMultiKill: Double? = nil, longestTimeSpentLiving: Double? = nil, magicDamageDealt: Double? = nil, magicDamageDealtToChampions: Double? = nil, magicDamageTaken: Double? = nil, missions: ModelMatchInfoInfoParticipantsInnerMissions? = nil, needVisionPings: Double? = nil, neutralMinionsKilled: Double? = nil, nexusKills: Double? = nil, nexusLost: Double? = nil, nexusTakedowns: Double? = nil, objectivesStolen: Double? = nil, objectivesStolenAssists: Double? = nil, onMyWayPings: Double? = nil, participantId: Double? = nil, pentaKills: Double? = nil, perks: ModelMatchInfoInfoParticipantsInnerPerks? = nil, physicalDamageDealt: Double? = nil, physicalDamageDealtToChampions: Double? = nil, physicalDamageTaken: Double? = nil, placement: Double? = nil, playerAugment1: Double? = nil, playerAugment2: Double? = nil, playerAugment3: Double? = nil, playerAugment4: Double? = nil, playerScore0: Double? = nil, playerScore1: Double? = nil, playerScore10: Double? = nil, playerScore11: Double? = nil, playerScore2: Double? = nil, playerScore3: Double? = nil, playerScore4: Double? = nil, playerScore5: Double? = nil, playerScore6: Double? = nil, playerScore7: Double? = nil, playerScore8: Double? = nil, playerScore9: Double? = nil, playerSubteamId: Double? = nil, profileIcon: Double? = nil, pushPings: Double? = nil, puuid: String? = nil, quadraKills: Double? = nil, riotIdGameName: String? = nil, riotIdTagline: String? = nil, role: String? = nil, sightWardsBoughtInGame: Double? = nil, spell1Casts: Double? = nil, spell2Casts: Double? = nil, spell3Casts: Double? = nil, spell4Casts: Double? = nil, subteamPlacement: Double? = nil, summoner1Casts: Double? = nil, summoner1Id: Double? = nil, summoner2Casts: Double? = nil, summoner2Id: Double? = nil, summonerId: String? = nil, summonerLevel: Double? = nil, summonerName: String? = nil, teamEarlySurrendered: Bool? = nil, teamId: Double? = nil, teamPosition: String? = nil, timeCCingOthers: Double? = nil, timePlayed: Double? = nil, totalAllyJungleMinionsKilled: Double? = nil, totalDamageDealt: Double? = nil, totalDamageDealtToChampions: Double? = nil, totalDamageShieldedOnTeammates: Double? = nil, totalDamageTaken: Double? = nil, totalEnemyJungleMinionsKilled: Double? = nil, totalHeal: Double? = nil, totalHealsOnTeammates: Double? = nil, totalMinionsKilled: Double? = nil, totalTimeCCDealt: Double? = nil, totalTimeSpentDead: Double? = nil, totalUnitsHealed: Double? = nil, tripleKills: Double? = nil, trueDamageDealt: Double? = nil, trueDamageDealtToChampions: Double? = nil, trueDamageTaken: Double? = nil, turretKills: Double? = nil, turretTakedowns: Double? = nil, turretsLost: Double? = nil, unrealKills: Double? = nil, visionClearedPings: Double? = nil, visionScore: Double? = nil, visionWardsBoughtInGame: Double? = nil, wardsKilled: Double? = nil, wardsPlaced: Double? = nil, win: Bool? = nil) {
        self.allInPings = allInPings
        self.assistMePings = assistMePings
        self.assists = assists
        self.baronKills = baronKills
        self.basicPings = basicPings
        self.bountyLevel = bountyLevel
        self.champExperience = champExperience
        self.champLevel = champLevel
        self.championId = championId
        self.championName = championName
        self.championTransform = championTransform
        self.commandPings = commandPings
        self.consumablesPurchased = consumablesPurchased
        self.damageDealtToBuildings = damageDealtToBuildings
        self.damageDealtToObjectives = damageDealtToObjectives
        self.damageDealtToTurrets = damageDealtToTurrets
        self.damageSelfMitigated = damageSelfMitigated
        self.dangerPings = dangerPings
        self.deaths = deaths
        self.detectorWardsPlaced = detectorWardsPlaced
        self.doubleKills = doubleKills
        self.dragonKills = dragonKills
        self.eligibleForProgression = eligibleForProgression
        self.enemyMissingPings = enemyMissingPings
        self.enemyVisionPings = enemyVisionPings
        self.firstBloodAssist = firstBloodAssist
        self.firstBloodKill = firstBloodKill
        self.firstTowerAssist = firstTowerAssist
        self.firstTowerKill = firstTowerKill
        self.gameEndedInEarlySurrender = gameEndedInEarlySurrender
        self.gameEndedInSurrender = gameEndedInSurrender
        self.getBackPings = getBackPings
        self.goldEarned = goldEarned
        self.goldSpent = goldSpent
        self.holdPings = holdPings
        self.individualPosition = individualPosition
        self.inhibitorKills = inhibitorKills
        self.inhibitorTakedowns = inhibitorTakedowns
        self.inhibitorsLost = inhibitorsLost
        self.item0 = item0
        self.item1 = item1
        self.item2 = item2
        self.item3 = item3
        self.item4 = item4
        self.item5 = item5
        self.item6 = item6
        self.itemsPurchased = itemsPurchased
        self.killingSprees = killingSprees
        self.kills = kills
        self.lane = lane
        self.largestCriticalStrike = largestCriticalStrike
        self.largestKillingSpree = largestKillingSpree
        self.largestMultiKill = largestMultiKill
        self.longestTimeSpentLiving = longestTimeSpentLiving
        self.magicDamageDealt = magicDamageDealt
        self.magicDamageDealtToChampions = magicDamageDealtToChampions
        self.magicDamageTaken = magicDamageTaken
        self.missions = missions
        self.needVisionPings = needVisionPings
        self.neutralMinionsKilled = neutralMinionsKilled
        self.nexusKills = nexusKills
        self.nexusLost = nexusLost
        self.nexusTakedowns = nexusTakedowns
        self.objectivesStolen = objectivesStolen
        self.objectivesStolenAssists = objectivesStolenAssists
        self.onMyWayPings = onMyWayPings
        self.participantId = participantId
        self.pentaKills = pentaKills
        self.perks = perks
        self.physicalDamageDealt = physicalDamageDealt
        self.physicalDamageDealtToChampions = physicalDamageDealtToChampions
        self.physicalDamageTaken = physicalDamageTaken
        self.placement = placement
        self.playerAugment1 = playerAugment1
        self.playerAugment2 = playerAugment2
        self.playerAugment3 = playerAugment3
        self.playerAugment4 = playerAugment4
        self.playerScore0 = playerScore0
        self.playerScore1 = playerScore1
        self.playerScore10 = playerScore10
        self.playerScore11 = playerScore11
        self.playerScore2 = playerScore2
        self.playerScore3 = playerScore3
        self.playerScore4 = playerScore4
        self.playerScore5 = playerScore5
        self.playerScore6 = playerScore6
        self.playerScore7 = playerScore7
        self.playerScore8 = playerScore8
        self.playerScore9 = playerScore9
        self.playerSubteamId = playerSubteamId
        self.profileIcon = profileIcon
        self.pushPings = pushPings
        self.puuid = puuid
        self.quadraKills = quadraKills
        self.riotIdGameName = riotIdGameName
        self.riotIdTagline = riotIdTagline
        self.role = role
        self.sightWardsBoughtInGame = sightWardsBoughtInGame
        self.spell1Casts = spell1Casts
        self.spell2Casts = spell2Casts
        self.spell3Casts = spell3Casts
        self.spell4Casts = spell4Casts
        self.subteamPlacement = subteamPlacement
        self.summoner1Casts = summoner1Casts
        self.summoner1Id = summoner1Id
        self.summoner2Casts = summoner2Casts
        self.summoner2Id = summoner2Id
        self.summonerId = summonerId
        self.summonerLevel = summonerLevel
        self.summonerName = summonerName
        self.teamEarlySurrendered = teamEarlySurrendered
        self.teamId = teamId
        self.teamPosition = teamPosition
        self.timeCCingOthers = timeCCingOthers
        self.timePlayed = timePlayed
        self.totalAllyJungleMinionsKilled = totalAllyJungleMinionsKilled
        self.totalDamageDealt = totalDamageDealt
        self.totalDamageDealtToChampions = totalDamageDealtToChampions
        self.totalDamageShieldedOnTeammates = totalDamageShieldedOnTeammates
        self.totalDamageTaken = totalDamageTaken
        self.totalEnemyJungleMinionsKilled = totalEnemyJungleMinionsKilled
        self.totalHeal = totalHeal
        self.totalHealsOnTeammates = totalHealsOnTeammates
        self.totalMinionsKilled = totalMinionsKilled
        self.totalTimeCCDealt = totalTimeCCDealt
        self.totalTimeSpentDead = totalTimeSpentDead
        self.totalUnitsHealed = totalUnitsHealed
        self.tripleKills = tripleKills
        self.trueDamageDealt = trueDamageDealt
        self.trueDamageDealtToChampions = trueDamageDealtToChampions
        self.trueDamageTaken = trueDamageTaken
        self.turretKills = turretKills
        self.turretTakedowns = turretTakedowns
        self.turretsLost = turretsLost
        self.unrealKills = unrealKills
        self.visionClearedPings = visionClearedPings
        self.visionScore = visionScore
        self.visionWardsBoughtInGame = visionWardsBoughtInGame
        self.wardsKilled = wardsKilled
        self.wardsPlaced = wardsPlaced
        self.win = win
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case allInPings
        case assistMePings
        case assists
        case baronKills
        case basicPings
        case bountyLevel
        case champExperience
        case champLevel
        case championId
        case championName
        case championTransform
        case commandPings
        case consumablesPurchased
        case damageDealtToBuildings
        case damageDealtToObjectives
        case damageDealtToTurrets
        case damageSelfMitigated
        case dangerPings
        case deaths
        case detectorWardsPlaced
        case doubleKills
        case dragonKills
        case eligibleForProgression
        case enemyMissingPings
        case enemyVisionPings
        case firstBloodAssist
        case firstBloodKill
        case firstTowerAssist
        case firstTowerKill
        case gameEndedInEarlySurrender
        case gameEndedInSurrender
        case getBackPings
        case goldEarned
        case goldSpent
        case holdPings
        case individualPosition
        case inhibitorKills
        case inhibitorTakedowns
        case inhibitorsLost
        case item0
        case item1
        case item2
        case item3
        case item4
        case item5
        case item6
        case itemsPurchased
        case killingSprees
        case kills
        case lane
        case largestCriticalStrike
        case largestKillingSpree
        case largestMultiKill
        case longestTimeSpentLiving
        case magicDamageDealt
        case magicDamageDealtToChampions
        case magicDamageTaken
        case missions
        case needVisionPings
        case neutralMinionsKilled
        case nexusKills
        case nexusLost
        case nexusTakedowns
        case objectivesStolen
        case objectivesStolenAssists
        case onMyWayPings
        case participantId
        case pentaKills
        case perks
        case physicalDamageDealt
        case physicalDamageDealtToChampions
        case physicalDamageTaken
        case placement
        case playerAugment1
        case playerAugment2
        case playerAugment3
        case playerAugment4
        case playerScore0
        case playerScore1
        case playerScore10
        case playerScore11
        case playerScore2
        case playerScore3
        case playerScore4
        case playerScore5
        case playerScore6
        case playerScore7
        case playerScore8
        case playerScore9
        case playerSubteamId
        case profileIcon
        case pushPings
        case puuid
        case quadraKills
        case riotIdGameName
        case riotIdTagline
        case role
        case sightWardsBoughtInGame
        case spell1Casts
        case spell2Casts
        case spell3Casts
        case spell4Casts
        case subteamPlacement
        case summoner1Casts
        case summoner1Id
        case summoner2Casts
        case summoner2Id
        case summonerId
        case summonerLevel
        case summonerName
        case teamEarlySurrendered
        case teamId
        case teamPosition
        case timeCCingOthers
        case timePlayed
        case totalAllyJungleMinionsKilled
        case totalDamageDealt
        case totalDamageDealtToChampions
        case totalDamageShieldedOnTeammates
        case totalDamageTaken
        case totalEnemyJungleMinionsKilled
        case totalHeal
        case totalHealsOnTeammates
        case totalMinionsKilled
        case totalTimeCCDealt
        case totalTimeSpentDead
        case totalUnitsHealed
        case tripleKills
        case trueDamageDealt
        case trueDamageDealtToChampions
        case trueDamageTaken
        case turretKills
        case turretTakedowns
        case turretsLost
        case unrealKills
        case visionClearedPings
        case visionScore
        case visionWardsBoughtInGame
        case wardsKilled
        case wardsPlaced
        case win
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(allInPings, forKey: .allInPings)
        try container.encodeIfPresent(assistMePings, forKey: .assistMePings)
        try container.encodeIfPresent(assists, forKey: .assists)
        try container.encodeIfPresent(baronKills, forKey: .baronKills)
        try container.encodeIfPresent(basicPings, forKey: .basicPings)
        try container.encodeIfPresent(bountyLevel, forKey: .bountyLevel)
        try container.encodeIfPresent(champExperience, forKey: .champExperience)
        try container.encodeIfPresent(champLevel, forKey: .champLevel)
        try container.encodeIfPresent(championId, forKey: .championId)
        try container.encodeIfPresent(championName, forKey: .championName)
        try container.encodeIfPresent(championTransform, forKey: .championTransform)
        try container.encodeIfPresent(commandPings, forKey: .commandPings)
        try container.encodeIfPresent(consumablesPurchased, forKey: .consumablesPurchased)
        try container.encodeIfPresent(damageDealtToBuildings, forKey: .damageDealtToBuildings)
        try container.encodeIfPresent(damageDealtToObjectives, forKey: .damageDealtToObjectives)
        try container.encodeIfPresent(damageDealtToTurrets, forKey: .damageDealtToTurrets)
        try container.encodeIfPresent(damageSelfMitigated, forKey: .damageSelfMitigated)
        try container.encodeIfPresent(dangerPings, forKey: .dangerPings)
        try container.encodeIfPresent(deaths, forKey: .deaths)
        try container.encodeIfPresent(detectorWardsPlaced, forKey: .detectorWardsPlaced)
        try container.encodeIfPresent(doubleKills, forKey: .doubleKills)
        try container.encodeIfPresent(dragonKills, forKey: .dragonKills)
        try container.encodeIfPresent(eligibleForProgression, forKey: .eligibleForProgression)
        try container.encodeIfPresent(enemyMissingPings, forKey: .enemyMissingPings)
        try container.encodeIfPresent(enemyVisionPings, forKey: .enemyVisionPings)
        try container.encodeIfPresent(firstBloodAssist, forKey: .firstBloodAssist)
        try container.encodeIfPresent(firstBloodKill, forKey: .firstBloodKill)
        try container.encodeIfPresent(firstTowerAssist, forKey: .firstTowerAssist)
        try container.encodeIfPresent(firstTowerKill, forKey: .firstTowerKill)
        try container.encodeIfPresent(gameEndedInEarlySurrender, forKey: .gameEndedInEarlySurrender)
        try container.encodeIfPresent(gameEndedInSurrender, forKey: .gameEndedInSurrender)
        try container.encodeIfPresent(getBackPings, forKey: .getBackPings)
        try container.encodeIfPresent(goldEarned, forKey: .goldEarned)
        try container.encodeIfPresent(goldSpent, forKey: .goldSpent)
        try container.encodeIfPresent(holdPings, forKey: .holdPings)
        try container.encodeIfPresent(individualPosition, forKey: .individualPosition)
        try container.encodeIfPresent(inhibitorKills, forKey: .inhibitorKills)
        try container.encodeIfPresent(inhibitorTakedowns, forKey: .inhibitorTakedowns)
        try container.encodeIfPresent(inhibitorsLost, forKey: .inhibitorsLost)
        try container.encodeIfPresent(item0, forKey: .item0)
        try container.encodeIfPresent(item1, forKey: .item1)
        try container.encodeIfPresent(item2, forKey: .item2)
        try container.encodeIfPresent(item3, forKey: .item3)
        try container.encodeIfPresent(item4, forKey: .item4)
        try container.encodeIfPresent(item5, forKey: .item5)
        try container.encodeIfPresent(item6, forKey: .item6)
        try container.encodeIfPresent(itemsPurchased, forKey: .itemsPurchased)
        try container.encodeIfPresent(killingSprees, forKey: .killingSprees)
        try container.encodeIfPresent(kills, forKey: .kills)
        try container.encodeIfPresent(lane, forKey: .lane)
        try container.encodeIfPresent(largestCriticalStrike, forKey: .largestCriticalStrike)
        try container.encodeIfPresent(largestKillingSpree, forKey: .largestKillingSpree)
        try container.encodeIfPresent(largestMultiKill, forKey: .largestMultiKill)
        try container.encodeIfPresent(longestTimeSpentLiving, forKey: .longestTimeSpentLiving)
        try container.encodeIfPresent(magicDamageDealt, forKey: .magicDamageDealt)
        try container.encodeIfPresent(magicDamageDealtToChampions, forKey: .magicDamageDealtToChampions)
        try container.encodeIfPresent(magicDamageTaken, forKey: .magicDamageTaken)
        try container.encodeIfPresent(missions, forKey: .missions)
        try container.encodeIfPresent(needVisionPings, forKey: .needVisionPings)
        try container.encodeIfPresent(neutralMinionsKilled, forKey: .neutralMinionsKilled)
        try container.encodeIfPresent(nexusKills, forKey: .nexusKills)
        try container.encodeIfPresent(nexusLost, forKey: .nexusLost)
        try container.encodeIfPresent(nexusTakedowns, forKey: .nexusTakedowns)
        try container.encodeIfPresent(objectivesStolen, forKey: .objectivesStolen)
        try container.encodeIfPresent(objectivesStolenAssists, forKey: .objectivesStolenAssists)
        try container.encodeIfPresent(onMyWayPings, forKey: .onMyWayPings)
        try container.encodeIfPresent(participantId, forKey: .participantId)
        try container.encodeIfPresent(pentaKills, forKey: .pentaKills)
        try container.encodeIfPresent(perks, forKey: .perks)
        try container.encodeIfPresent(physicalDamageDealt, forKey: .physicalDamageDealt)
        try container.encodeIfPresent(physicalDamageDealtToChampions, forKey: .physicalDamageDealtToChampions)
        try container.encodeIfPresent(physicalDamageTaken, forKey: .physicalDamageTaken)
        try container.encodeIfPresent(placement, forKey: .placement)
        try container.encodeIfPresent(playerAugment1, forKey: .playerAugment1)
        try container.encodeIfPresent(playerAugment2, forKey: .playerAugment2)
        try container.encodeIfPresent(playerAugment3, forKey: .playerAugment3)
        try container.encodeIfPresent(playerAugment4, forKey: .playerAugment4)
        try container.encodeIfPresent(playerScore0, forKey: .playerScore0)
        try container.encodeIfPresent(playerScore1, forKey: .playerScore1)
        try container.encodeIfPresent(playerScore10, forKey: .playerScore10)
        try container.encodeIfPresent(playerScore11, forKey: .playerScore11)
        try container.encodeIfPresent(playerScore2, forKey: .playerScore2)
        try container.encodeIfPresent(playerScore3, forKey: .playerScore3)
        try container.encodeIfPresent(playerScore4, forKey: .playerScore4)
        try container.encodeIfPresent(playerScore5, forKey: .playerScore5)
        try container.encodeIfPresent(playerScore6, forKey: .playerScore6)
        try container.encodeIfPresent(playerScore7, forKey: .playerScore7)
        try container.encodeIfPresent(playerScore8, forKey: .playerScore8)
        try container.encodeIfPresent(playerScore9, forKey: .playerScore9)
        try container.encodeIfPresent(playerSubteamId, forKey: .playerSubteamId)
        try container.encodeIfPresent(profileIcon, forKey: .profileIcon)
        try container.encodeIfPresent(pushPings, forKey: .pushPings)
        try container.encodeIfPresent(puuid, forKey: .puuid)
        try container.encodeIfPresent(quadraKills, forKey: .quadraKills)
        try container.encodeIfPresent(riotIdGameName, forKey: .riotIdGameName)
        try container.encodeIfPresent(riotIdTagline, forKey: .riotIdTagline)
        try container.encodeIfPresent(role, forKey: .role)
        try container.encodeIfPresent(sightWardsBoughtInGame, forKey: .sightWardsBoughtInGame)
        try container.encodeIfPresent(spell1Casts, forKey: .spell1Casts)
        try container.encodeIfPresent(spell2Casts, forKey: .spell2Casts)
        try container.encodeIfPresent(spell3Casts, forKey: .spell3Casts)
        try container.encodeIfPresent(spell4Casts, forKey: .spell4Casts)
        try container.encodeIfPresent(subteamPlacement, forKey: .subteamPlacement)
        try container.encodeIfPresent(summoner1Casts, forKey: .summoner1Casts)
        try container.encodeIfPresent(summoner1Id, forKey: .summoner1Id)
        try container.encodeIfPresent(summoner2Casts, forKey: .summoner2Casts)
        try container.encodeIfPresent(summoner2Id, forKey: .summoner2Id)
        try container.encodeIfPresent(summonerId, forKey: .summonerId)
        try container.encodeIfPresent(summonerLevel, forKey: .summonerLevel)
        try container.encodeIfPresent(summonerName, forKey: .summonerName)
        try container.encodeIfPresent(teamEarlySurrendered, forKey: .teamEarlySurrendered)
        try container.encodeIfPresent(teamId, forKey: .teamId)
        try container.encodeIfPresent(teamPosition, forKey: .teamPosition)
        try container.encodeIfPresent(timeCCingOthers, forKey: .timeCCingOthers)
        try container.encodeIfPresent(timePlayed, forKey: .timePlayed)
        try container.encodeIfPresent(totalAllyJungleMinionsKilled, forKey: .totalAllyJungleMinionsKilled)
        try container.encodeIfPresent(totalDamageDealt, forKey: .totalDamageDealt)
        try container.encodeIfPresent(totalDamageDealtToChampions, forKey: .totalDamageDealtToChampions)
        try container.encodeIfPresent(totalDamageShieldedOnTeammates, forKey: .totalDamageShieldedOnTeammates)
        try container.encodeIfPresent(totalDamageTaken, forKey: .totalDamageTaken)
        try container.encodeIfPresent(totalEnemyJungleMinionsKilled, forKey: .totalEnemyJungleMinionsKilled)
        try container.encodeIfPresent(totalHeal, forKey: .totalHeal)
        try container.encodeIfPresent(totalHealsOnTeammates, forKey: .totalHealsOnTeammates)
        try container.encodeIfPresent(totalMinionsKilled, forKey: .totalMinionsKilled)
        try container.encodeIfPresent(totalTimeCCDealt, forKey: .totalTimeCCDealt)
        try container.encodeIfPresent(totalTimeSpentDead, forKey: .totalTimeSpentDead)
        try container.encodeIfPresent(totalUnitsHealed, forKey: .totalUnitsHealed)
        try container.encodeIfPresent(tripleKills, forKey: .tripleKills)
        try container.encodeIfPresent(trueDamageDealt, forKey: .trueDamageDealt)
        try container.encodeIfPresent(trueDamageDealtToChampions, forKey: .trueDamageDealtToChampions)
        try container.encodeIfPresent(trueDamageTaken, forKey: .trueDamageTaken)
        try container.encodeIfPresent(turretKills, forKey: .turretKills)
        try container.encodeIfPresent(turretTakedowns, forKey: .turretTakedowns)
        try container.encodeIfPresent(turretsLost, forKey: .turretsLost)
        try container.encodeIfPresent(unrealKills, forKey: .unrealKills)
        try container.encodeIfPresent(visionClearedPings, forKey: .visionClearedPings)
        try container.encodeIfPresent(visionScore, forKey: .visionScore)
        try container.encodeIfPresent(visionWardsBoughtInGame, forKey: .visionWardsBoughtInGame)
        try container.encodeIfPresent(wardsKilled, forKey: .wardsKilled)
        try container.encodeIfPresent(wardsPlaced, forKey: .wardsPlaced)
        try container.encodeIfPresent(win, forKey: .win)
    }
}

