//
// DataListMatchesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DataListMatchesAPI {

    /**
     Data List
     
     - parameter puuid: (path) version 
     - parameter apiKey: (query) api_key 
     - parameter startTime: (query) Epoch timestamp in seconds. The matchlist started storing timestamps on June 16th, 2021. Any matches played before June 16th, 2021 wont be included in the results if the startTime filter is set. (optional)
     - parameter endTime: (query) Epoch timestamp in seconds. (optional)
     - parameter queue: (query) Filter the list of match ids by a specific queue id. This filter is mutually inclusive of the type filter meaning any match ids returned must match both the queue and type filters. (optional)
     - parameter type: (query) Filter the list of match ids by the type of match. This filter is mutually inclusive of the queue filter meaning any match ids returned must match both the queue and type filters. (optional)
     - parameter start: (query) Defaults to 0. Start index. (optional)
     - parameter count: (query) Defaults to 20. Valid values: 0 to 100. Number of match ids to return. (optional)
     - returns: [String]
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getDataMatchesList(puuid: String, apiKey: String, startTime: Double? = nil, endTime: Double? = nil, queue: Int? = nil, type: String? = nil, start: Int? = nil, count: Int? = nil) async throws -> [String] {
        return try await getDataMatchesListWithRequestBuilder(puuid: puuid, apiKey: apiKey, startTime: startTime, endTime: endTime, queue: queue, type: type, start: start, count: count).execute().body
    }

    /**
     Data List
     - GET /lol/match/v5/matches/by-puuid/{puuid}/ids
     - parameter puuid: (path) version 
     - parameter apiKey: (query) api_key 
     - parameter startTime: (query) Epoch timestamp in seconds. The matchlist started storing timestamps on June 16th, 2021. Any matches played before June 16th, 2021 wont be included in the results if the startTime filter is set. (optional)
     - parameter endTime: (query) Epoch timestamp in seconds. (optional)
     - parameter queue: (query) Filter the list of match ids by a specific queue id. This filter is mutually inclusive of the type filter meaning any match ids returned must match both the queue and type filters. (optional)
     - parameter type: (query) Filter the list of match ids by the type of match. This filter is mutually inclusive of the queue filter meaning any match ids returned must match both the queue and type filters. (optional)
     - parameter start: (query) Defaults to 0. Start index. (optional)
     - parameter count: (query) Defaults to 20. Valid values: 0 to 100. Number of match ids to return. (optional)
     - returns: RequestBuilder<[String]> 
     */
    open class func getDataMatchesListWithRequestBuilder(puuid: String, apiKey: String, startTime: Double? = nil, endTime: Double? = nil, queue: Int? = nil, type: String? = nil, start: Int? = nil, count: Int? = nil) -> RequestBuilder<[String]> {
        var localVariablePath = "/lol/match/v5/matches/by-puuid/{puuid}/ids"
        let puuidPreEscape = "\(APIHelper.mapValueToPathItem(puuid))"
        let puuidPostEscape = puuidPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{puuid}", with: puuidPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "api_key": (wrappedValue: apiKey.encodeToJSON(), isExplode: true),
            "startTime": (wrappedValue: startTime?.encodeToJSON(), isExplode: true),
            "endTime": (wrappedValue: endTime?.encodeToJSON(), isExplode: true),
            "queue": (wrappedValue: queue?.encodeToJSON(), isExplode: true),
            "type": (wrappedValue: type?.encodeToJSON(), isExplode: true),
            "start": (wrappedValue: start?.encodeToJSON(), isExplode: true),
            "count": (wrappedValue: count?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<[String]>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
