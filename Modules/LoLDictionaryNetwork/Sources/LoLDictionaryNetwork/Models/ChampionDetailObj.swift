//
// ChampionDetailObj.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ChampionDetailObj: Codable, JSONEncodable, Hashable {

    public var id: String
    public var key: String
    public var name: String
    public var title: String
    public var image: ImageObj
    public var skins: [ChampionDetailObjSkinsInner]
    public var lore: String
    public var blurb: String
    public var allytips: [String]
    public var enemytips: [String]
    public var tags: [String]
    public var partype: String
    public var info: InfoObj
    public var stats: StatsObj
    public var spells: [ChampionDetailObjSpellsInner]
    public var passive: PassiveObj

    public init(id: String, key: String, name: String, title: String, image: ImageObj, skins: [ChampionDetailObjSkinsInner], lore: String, blurb: String, allytips: [String], enemytips: [String], tags: [String], partype: String, info: InfoObj, stats: StatsObj, spells: [ChampionDetailObjSpellsInner], passive: PassiveObj) {
        self.id = id
        self.key = key
        self.name = name
        self.title = title
        self.image = image
        self.skins = skins
        self.lore = lore
        self.blurb = blurb
        self.allytips = allytips
        self.enemytips = enemytips
        self.tags = tags
        self.partype = partype
        self.info = info
        self.stats = stats
        self.spells = spells
        self.passive = passive
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case key
        case name
        case title
        case image
        case skins
        case lore
        case blurb
        case allytips
        case enemytips
        case tags
        case partype
        case info
        case stats
        case spells
        case passive
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(id, forKey: .id)
        try container.encode(key, forKey: .key)
        try container.encode(name, forKey: .name)
        try container.encode(title, forKey: .title)
        try container.encode(image, forKey: .image)
        try container.encode(skins, forKey: .skins)
        try container.encode(lore, forKey: .lore)
        try container.encode(blurb, forKey: .blurb)
        try container.encode(allytips, forKey: .allytips)
        try container.encode(enemytips, forKey: .enemytips)
        try container.encode(tags, forKey: .tags)
        try container.encode(partype, forKey: .partype)
        try container.encode(info, forKey: .info)
        try container.encode(stats, forKey: .stats)
        try container.encode(spells, forKey: .spells)
        try container.encode(passive, forKey: .passive)
    }
}

