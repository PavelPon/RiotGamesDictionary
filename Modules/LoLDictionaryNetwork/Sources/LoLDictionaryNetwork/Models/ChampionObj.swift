//
// ChampionObj.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ChampionObj: Codable, JSONEncodable, Hashable {

    public var version: String
    public var id: String
    public var key: String
    public var name: String
    public var title: String
    public var blurb: String
    public var info: InfoObj
    public var image: ImageObj
    public var tags: [String]
    public var partype: String
    public var stats: StatsObj

    public init(version: String, id: String, key: String, name: String, title: String, blurb: String, info: InfoObj, image: ImageObj, tags: [String], partype: String, stats: StatsObj) {
        self.version = version
        self.id = id
        self.key = key
        self.name = name
        self.title = title
        self.blurb = blurb
        self.info = info
        self.image = image
        self.tags = tags
        self.partype = partype
        self.stats = stats
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case version
        case id
        case key
        case name
        case title
        case blurb
        case info
        case image
        case tags
        case partype
        case stats
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(version, forKey: .version)
        try container.encode(id, forKey: .id)
        try container.encode(key, forKey: .key)
        try container.encode(name, forKey: .name)
        try container.encode(title, forKey: .title)
        try container.encode(blurb, forKey: .blurb)
        try container.encode(info, forKey: .info)
        try container.encode(image, forKey: .image)
        try container.encode(tags, forKey: .tags)
        try container.encode(partype, forKey: .partype)
        try container.encode(stats, forKey: .stats)
    }
}

