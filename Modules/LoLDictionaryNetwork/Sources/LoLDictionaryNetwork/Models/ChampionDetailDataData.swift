//
// ChampionDetailDataData.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public enum ChampionDetailDataData: Codable, JSONEncodable, Hashable {
    case typeAatroxChampionDetailObj(AatroxChampionDetailObj)
    case typeAhriChampionDetailObj(AhriChampionDetailObj)
    case typeAkaliChampionDetailObj(AkaliChampionDetailObj)
    case typeAkshanChampionDetailObj(AkshanChampionDetailObj)
    case typeAlistarChampionDetailObj(AlistarChampionDetailObj)
    case typeAmumuChampionDetailObj(AmumuChampionDetailObj)
    case typeAniviaChampionDetailObj(AniviaChampionDetailObj)
    case typeAnnieChampionDetailObj(AnnieChampionDetailObj)
    case typeApheliosChampionDetailObj(ApheliosChampionDetailObj)
    case typeAsheChampionDetailObj(AsheChampionDetailObj)
    case typeAurelionSolChampionDetailObj(AurelionSolChampionDetailObj)
    case typeAzirChampionDetailObj(AzirChampionDetailObj)
    case typeBardChampionDetailObj(BardChampionDetailObj)
    case typeBelvethChampionDetailObj(BelvethChampionDetailObj)
    case typeBlitzcrankChampionDetailObj(BlitzcrankChampionDetailObj)
    case typeBrandChampionDetailObj(BrandChampionDetailObj)
    case typeBraumChampionDetailObj(BraumChampionDetailObj)
    case typeBriarChampionDetailObj(BriarChampionDetailObj)
    case typeCaitlynChampionDetailObj(CaitlynChampionDetailObj)
    case typeCamilleChampionDetailObj(CamilleChampionDetailObj)
    case typeCassiopeiaChampionDetailObj(CassiopeiaChampionDetailObj)
    case typeChogathChampionDetailObj(ChogathChampionDetailObj)
    case typeCorkiChampionDetailObj(CorkiChampionDetailObj)
    case typeDariusChampionDetailObj(DariusChampionDetailObj)
    case typeDianaChampionDetailObj(DianaChampionDetailObj)
    case typeDrMundoChampionDetailObj(DrMundoChampionDetailObj)
    case typeDravenChampionDetailObj(DravenChampionDetailObj)
    case typeEkkoChampionDetailObj(EkkoChampionDetailObj)
    case typeEliseChampionDetailObj(EliseChampionDetailObj)
    case typeEvelynnChampionDetailObj(EvelynnChampionDetailObj)
    case typeEzrealChampionDetailObj(EzrealChampionDetailObj)
    case typeFiddlesticksChampionDetailObj(FiddlesticksChampionDetailObj)
    case typeFioraChampionDetailObj(FioraChampionDetailObj)
    case typeFizzChampionDetailObj(FizzChampionDetailObj)
    case typeGalioChampionDetailObj(GalioChampionDetailObj)
    case typeGangplankChampionDetailObj(GangplankChampionDetailObj)
    case typeGarenChampionDetailObj(GarenChampionDetailObj)
    case typeGnarChampionDetailObj(GnarChampionDetailObj)
    case typeGragasChampionDetailObj(GragasChampionDetailObj)
    case typeGravesChampionDetailObj(GravesChampionDetailObj)
    case typeGwenChampionDetailObj(GwenChampionDetailObj)
    case typeHecarimChampionDetailObj(HecarimChampionDetailObj)
    case typeHeimerdingerChampionDetailObj(HeimerdingerChampionDetailObj)
    case typeIllaoiChampionDetailObj(IllaoiChampionDetailObj)
    case typeIreliaChampionDetailObj(IreliaChampionDetailObj)
    case typeIvernChampionDetailObj(IvernChampionDetailObj)
    case typeJannaChampionDetailObj(JannaChampionDetailObj)
    case typeJarvanIVChampionDetailObj(JarvanIVChampionDetailObj)
    case typeJaxChampionDetailObj(JaxChampionDetailObj)
    case typeJayceChampionDetailObj(JayceChampionDetailObj)
    case typeJhinChampionDetailObj(JhinChampionDetailObj)
    case typeJinxChampionDetailObj(JinxChampionDetailObj)
    case typeKSanteChampionDetailObj(KSanteChampionDetailObj)
    case typeKaisaChampionDetailObj(KaisaChampionDetailObj)
    case typeKalistaChampionDetailObj(KalistaChampionDetailObj)
    case typeKarmaChampionDetailObj(KarmaChampionDetailObj)
    case typeKarthusChampionDetailObj(KarthusChampionDetailObj)
    case typeKassadinChampionDetailObj(KassadinChampionDetailObj)
    case typeKatarinaChampionDetailObj(KatarinaChampionDetailObj)
    case typeKayleChampionDetailObj(KayleChampionDetailObj)
    case typeKaynChampionDetailObj(KaynChampionDetailObj)
    case typeKennenChampionDetailObj(KennenChampionDetailObj)
    case typeKhazixChampionDetailObj(KhazixChampionDetailObj)
    case typeKindredChampionDetailObj(KindredChampionDetailObj)
    case typeKledChampionDetailObj(KledChampionDetailObj)
    case typeKogMawChampionDetailObj(KogMawChampionDetailObj)
    case typeLeblancChampionDetailObj(LeblancChampionDetailObj)
    case typeLeeSinChampionDetailObj(LeeSinChampionDetailObj)
    case typeLeonaChampionDetailObj(LeonaChampionDetailObj)
    case typeLilliaChampionDetailObj(LilliaChampionDetailObj)
    case typeLissandraChampionDetailObj(LissandraChampionDetailObj)
    case typeLucianChampionDetailObj(LucianChampionDetailObj)
    case typeLuluChampionDetailObj(LuluChampionDetailObj)
    case typeLuxChampionDetailObj(LuxChampionDetailObj)
    case typeMalphiteChampionDetailObj(MalphiteChampionDetailObj)
    case typeMalzaharChampionDetailObj(MalzaharChampionDetailObj)
    case typeMaokaiChampionDetailObj(MaokaiChampionDetailObj)
    case typeMasterYiChampionDetailObj(MasterYiChampionDetailObj)
    case typeMilioChampionDetailObj(MilioChampionDetailObj)
    case typeMissFortuneChampionDetailObj(MissFortuneChampionDetailObj)
    case typeMonkeyKingChampionDetailObj(MonkeyKingChampionDetailObj)
    case typeMordekaiserChampionDetailObj(MordekaiserChampionDetailObj)
    case typeMorganaChampionDetailObj(MorganaChampionDetailObj)
    case typeNaafiriChampionDetailObj(NaafiriChampionDetailObj)
    case typeNamiChampionDetailObj(NamiChampionDetailObj)
    case typeNasusChampionDetailObj(NasusChampionDetailObj)
    case typeNautilusChampionDetailObj(NautilusChampionDetailObj)
    case typeNeekoChampionDetailObj(NeekoChampionDetailObj)
    case typeNidaleeChampionDetailObj(NidaleeChampionDetailObj)
    case typeNilahChampionDetailObj(NilahChampionDetailObj)
    case typeNocturneChampionDetailObj(NocturneChampionDetailObj)
    case typeNunuChampionDetailObj(NunuChampionDetailObj)
    case typeOlafChampionDetailObj(OlafChampionDetailObj)
    case typeOriannaChampionDetailObj(OriannaChampionDetailObj)
    case typeOrnnChampionDetailObj(OrnnChampionDetailObj)
    case typePantheonChampionDetailObj(PantheonChampionDetailObj)
    case typePoppyChampionDetailObj(PoppyChampionDetailObj)
    case typePykeChampionDetailObj(PykeChampionDetailObj)
    case typeQiyanaChampionDetailObj(QiyanaChampionDetailObj)
    case typeQuinnChampionDetailObj(QuinnChampionDetailObj)
    case typeRakanChampionDetailObj(RakanChampionDetailObj)
    case typeRammusChampionDetailObj(RammusChampionDetailObj)
    case typeRekSaiChampionDetailObj(RekSaiChampionDetailObj)
    case typeRellChampionDetailObj(RellChampionDetailObj)
    case typeRenataChampionDetailObj(RenataChampionDetailObj)
    case typeRenektonChampionDetailObj(RenektonChampionDetailObj)
    case typeRengarChampionDetailObj(RengarChampionDetailObj)
    case typeRivenChampionDetailObj(RivenChampionDetailObj)
    case typeRumbleChampionDetailObj(RumbleChampionDetailObj)
    case typeRyzeChampionDetailObj(RyzeChampionDetailObj)
    case typeSamiraChampionDetailObj(SamiraChampionDetailObj)
    case typeSejuaniChampionDetailObj(SejuaniChampionDetailObj)
    case typeSennaChampionDetailObj(SennaChampionDetailObj)
    case typeSeraphineChampionDetailObj(SeraphineChampionDetailObj)
    case typeSettChampionDetailObj(SettChampionDetailObj)
    case typeShacoChampionDetailObj(ShacoChampionDetailObj)
    case typeShenChampionDetailObj(ShenChampionDetailObj)
    case typeShyvanaChampionDetailObj(ShyvanaChampionDetailObj)
    case typeSingedChampionDetailObj(SingedChampionDetailObj)
    case typeSionChampionDetailObj(SionChampionDetailObj)
    case typeSivirChampionDetailObj(SivirChampionDetailObj)
    case typeSkarnerChampionDetailObj(SkarnerChampionDetailObj)
    case typeSonaChampionDetailObj(SonaChampionDetailObj)
    case typeSorakaChampionDetailObj(SorakaChampionDetailObj)
    case typeSwainChampionDetailObj(SwainChampionDetailObj)
    case typeSylasChampionDetailObj(SylasChampionDetailObj)
    case typeSyndraChampionDetailObj(SyndraChampionDetailObj)
    case typeTahmKenchChampionDetailObj(TahmKenchChampionDetailObj)
    case typeTaliyahChampionDetailObj(TaliyahChampionDetailObj)
    case typeTalonChampionDetailObj(TalonChampionDetailObj)
    case typeTaricChampionDetailObj(TaricChampionDetailObj)
    case typeTeemoChampionDetailObj(TeemoChampionDetailObj)
    case typeThreshChampionDetailObj(ThreshChampionDetailObj)
    case typeTristanaChampionDetailObj(TristanaChampionDetailObj)
    case typeTrundleChampionDetailObj(TrundleChampionDetailObj)
    case typeTryndamereChampionDetailObj(TryndamereChampionDetailObj)
    case typeTwistedFateChampionDetailObj(TwistedFateChampionDetailObj)
    case typeTwitchChampionDetailObj(TwitchChampionDetailObj)
    case typeUdyrChampionDetailObj(UdyrChampionDetailObj)
    case typeUrgotChampionDetailObj(UrgotChampionDetailObj)
    case typeVarusChampionDetailObj(VarusChampionDetailObj)
    case typeVayneChampionDetailObj(VayneChampionDetailObj)
    case typeVeigarChampionDetailObj(VeigarChampionDetailObj)
    case typeVelkozChampionDetailObj(VelkozChampionDetailObj)
    case typeVexChampionDetailObj(VexChampionDetailObj)
    case typeViChampionDetailObj(ViChampionDetailObj)
    case typeViegoChampionDetailObj(ViegoChampionDetailObj)
    case typeViktorChampionDetailObj(ViktorChampionDetailObj)
    case typeVladimirChampionDetailObj(VladimirChampionDetailObj)
    case typeVolibearChampionDetailObj(VolibearChampionDetailObj)
    case typeWarwickChampionDetailObj(WarwickChampionDetailObj)
    case typeXayahChampionDetailObj(XayahChampionDetailObj)
    case typeXerathChampionDetailObj(XerathChampionDetailObj)
    case typeXinZhaoChampionDetailObj(XinZhaoChampionDetailObj)
    case typeYasuoChampionDetailObj(YasuoChampionDetailObj)
    case typeYoneChampionDetailObj(YoneChampionDetailObj)
    case typeYorickChampionDetailObj(YorickChampionDetailObj)
    case typeYuumiChampionDetailObj(YuumiChampionDetailObj)
    case typeZacChampionDetailObj(ZacChampionDetailObj)
    case typeZedChampionDetailObj(ZedChampionDetailObj)
    case typeZeriChampionDetailObj(ZeriChampionDetailObj)
    case typeZiggsChampionDetailObj(ZiggsChampionDetailObj)
    case typeZileanChampionDetailObj(ZileanChampionDetailObj)
    case typeZoeChampionDetailObj(ZoeChampionDetailObj)
    case typeZyraChampionDetailObj(ZyraChampionDetailObj)

    public func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        switch self {
        case .typeAatroxChampionDetailObj(let value):
            try container.encode(value)
        case .typeAhriChampionDetailObj(let value):
            try container.encode(value)
        case .typeAkaliChampionDetailObj(let value):
            try container.encode(value)
        case .typeAkshanChampionDetailObj(let value):
            try container.encode(value)
        case .typeAlistarChampionDetailObj(let value):
            try container.encode(value)
        case .typeAmumuChampionDetailObj(let value):
            try container.encode(value)
        case .typeAniviaChampionDetailObj(let value):
            try container.encode(value)
        case .typeAnnieChampionDetailObj(let value):
            try container.encode(value)
        case .typeApheliosChampionDetailObj(let value):
            try container.encode(value)
        case .typeAsheChampionDetailObj(let value):
            try container.encode(value)
        case .typeAurelionSolChampionDetailObj(let value):
            try container.encode(value)
        case .typeAzirChampionDetailObj(let value):
            try container.encode(value)
        case .typeBardChampionDetailObj(let value):
            try container.encode(value)
        case .typeBelvethChampionDetailObj(let value):
            try container.encode(value)
        case .typeBlitzcrankChampionDetailObj(let value):
            try container.encode(value)
        case .typeBrandChampionDetailObj(let value):
            try container.encode(value)
        case .typeBraumChampionDetailObj(let value):
            try container.encode(value)
        case .typeBriarChampionDetailObj(let value):
            try container.encode(value)
        case .typeCaitlynChampionDetailObj(let value):
            try container.encode(value)
        case .typeCamilleChampionDetailObj(let value):
            try container.encode(value)
        case .typeCassiopeiaChampionDetailObj(let value):
            try container.encode(value)
        case .typeChogathChampionDetailObj(let value):
            try container.encode(value)
        case .typeCorkiChampionDetailObj(let value):
            try container.encode(value)
        case .typeDariusChampionDetailObj(let value):
            try container.encode(value)
        case .typeDianaChampionDetailObj(let value):
            try container.encode(value)
        case .typeDrMundoChampionDetailObj(let value):
            try container.encode(value)
        case .typeDravenChampionDetailObj(let value):
            try container.encode(value)
        case .typeEkkoChampionDetailObj(let value):
            try container.encode(value)
        case .typeEliseChampionDetailObj(let value):
            try container.encode(value)
        case .typeEvelynnChampionDetailObj(let value):
            try container.encode(value)
        case .typeEzrealChampionDetailObj(let value):
            try container.encode(value)
        case .typeFiddlesticksChampionDetailObj(let value):
            try container.encode(value)
        case .typeFioraChampionDetailObj(let value):
            try container.encode(value)
        case .typeFizzChampionDetailObj(let value):
            try container.encode(value)
        case .typeGalioChampionDetailObj(let value):
            try container.encode(value)
        case .typeGangplankChampionDetailObj(let value):
            try container.encode(value)
        case .typeGarenChampionDetailObj(let value):
            try container.encode(value)
        case .typeGnarChampionDetailObj(let value):
            try container.encode(value)
        case .typeGragasChampionDetailObj(let value):
            try container.encode(value)
        case .typeGravesChampionDetailObj(let value):
            try container.encode(value)
        case .typeGwenChampionDetailObj(let value):
            try container.encode(value)
        case .typeHecarimChampionDetailObj(let value):
            try container.encode(value)
        case .typeHeimerdingerChampionDetailObj(let value):
            try container.encode(value)
        case .typeIllaoiChampionDetailObj(let value):
            try container.encode(value)
        case .typeIreliaChampionDetailObj(let value):
            try container.encode(value)
        case .typeIvernChampionDetailObj(let value):
            try container.encode(value)
        case .typeJannaChampionDetailObj(let value):
            try container.encode(value)
        case .typeJarvanIVChampionDetailObj(let value):
            try container.encode(value)
        case .typeJaxChampionDetailObj(let value):
            try container.encode(value)
        case .typeJayceChampionDetailObj(let value):
            try container.encode(value)
        case .typeJhinChampionDetailObj(let value):
            try container.encode(value)
        case .typeJinxChampionDetailObj(let value):
            try container.encode(value)
        case .typeKSanteChampionDetailObj(let value):
            try container.encode(value)
        case .typeKaisaChampionDetailObj(let value):
            try container.encode(value)
        case .typeKalistaChampionDetailObj(let value):
            try container.encode(value)
        case .typeKarmaChampionDetailObj(let value):
            try container.encode(value)
        case .typeKarthusChampionDetailObj(let value):
            try container.encode(value)
        case .typeKassadinChampionDetailObj(let value):
            try container.encode(value)
        case .typeKatarinaChampionDetailObj(let value):
            try container.encode(value)
        case .typeKayleChampionDetailObj(let value):
            try container.encode(value)
        case .typeKaynChampionDetailObj(let value):
            try container.encode(value)
        case .typeKennenChampionDetailObj(let value):
            try container.encode(value)
        case .typeKhazixChampionDetailObj(let value):
            try container.encode(value)
        case .typeKindredChampionDetailObj(let value):
            try container.encode(value)
        case .typeKledChampionDetailObj(let value):
            try container.encode(value)
        case .typeKogMawChampionDetailObj(let value):
            try container.encode(value)
        case .typeLeblancChampionDetailObj(let value):
            try container.encode(value)
        case .typeLeeSinChampionDetailObj(let value):
            try container.encode(value)
        case .typeLeonaChampionDetailObj(let value):
            try container.encode(value)
        case .typeLilliaChampionDetailObj(let value):
            try container.encode(value)
        case .typeLissandraChampionDetailObj(let value):
            try container.encode(value)
        case .typeLucianChampionDetailObj(let value):
            try container.encode(value)
        case .typeLuluChampionDetailObj(let value):
            try container.encode(value)
        case .typeLuxChampionDetailObj(let value):
            try container.encode(value)
        case .typeMalphiteChampionDetailObj(let value):
            try container.encode(value)
        case .typeMalzaharChampionDetailObj(let value):
            try container.encode(value)
        case .typeMaokaiChampionDetailObj(let value):
            try container.encode(value)
        case .typeMasterYiChampionDetailObj(let value):
            try container.encode(value)
        case .typeMilioChampionDetailObj(let value):
            try container.encode(value)
        case .typeMissFortuneChampionDetailObj(let value):
            try container.encode(value)
        case .typeMonkeyKingChampionDetailObj(let value):
            try container.encode(value)
        case .typeMordekaiserChampionDetailObj(let value):
            try container.encode(value)
        case .typeMorganaChampionDetailObj(let value):
            try container.encode(value)
        case .typeNaafiriChampionDetailObj(let value):
            try container.encode(value)
        case .typeNamiChampionDetailObj(let value):
            try container.encode(value)
        case .typeNasusChampionDetailObj(let value):
            try container.encode(value)
        case .typeNautilusChampionDetailObj(let value):
            try container.encode(value)
        case .typeNeekoChampionDetailObj(let value):
            try container.encode(value)
        case .typeNidaleeChampionDetailObj(let value):
            try container.encode(value)
        case .typeNilahChampionDetailObj(let value):
            try container.encode(value)
        case .typeNocturneChampionDetailObj(let value):
            try container.encode(value)
        case .typeNunuChampionDetailObj(let value):
            try container.encode(value)
        case .typeOlafChampionDetailObj(let value):
            try container.encode(value)
        case .typeOriannaChampionDetailObj(let value):
            try container.encode(value)
        case .typeOrnnChampionDetailObj(let value):
            try container.encode(value)
        case .typePantheonChampionDetailObj(let value):
            try container.encode(value)
        case .typePoppyChampionDetailObj(let value):
            try container.encode(value)
        case .typePykeChampionDetailObj(let value):
            try container.encode(value)
        case .typeQiyanaChampionDetailObj(let value):
            try container.encode(value)
        case .typeQuinnChampionDetailObj(let value):
            try container.encode(value)
        case .typeRakanChampionDetailObj(let value):
            try container.encode(value)
        case .typeRammusChampionDetailObj(let value):
            try container.encode(value)
        case .typeRekSaiChampionDetailObj(let value):
            try container.encode(value)
        case .typeRellChampionDetailObj(let value):
            try container.encode(value)
        case .typeRenataChampionDetailObj(let value):
            try container.encode(value)
        case .typeRenektonChampionDetailObj(let value):
            try container.encode(value)
        case .typeRengarChampionDetailObj(let value):
            try container.encode(value)
        case .typeRivenChampionDetailObj(let value):
            try container.encode(value)
        case .typeRumbleChampionDetailObj(let value):
            try container.encode(value)
        case .typeRyzeChampionDetailObj(let value):
            try container.encode(value)
        case .typeSamiraChampionDetailObj(let value):
            try container.encode(value)
        case .typeSejuaniChampionDetailObj(let value):
            try container.encode(value)
        case .typeSennaChampionDetailObj(let value):
            try container.encode(value)
        case .typeSeraphineChampionDetailObj(let value):
            try container.encode(value)
        case .typeSettChampionDetailObj(let value):
            try container.encode(value)
        case .typeShacoChampionDetailObj(let value):
            try container.encode(value)
        case .typeShenChampionDetailObj(let value):
            try container.encode(value)
        case .typeShyvanaChampionDetailObj(let value):
            try container.encode(value)
        case .typeSingedChampionDetailObj(let value):
            try container.encode(value)
        case .typeSionChampionDetailObj(let value):
            try container.encode(value)
        case .typeSivirChampionDetailObj(let value):
            try container.encode(value)
        case .typeSkarnerChampionDetailObj(let value):
            try container.encode(value)
        case .typeSonaChampionDetailObj(let value):
            try container.encode(value)
        case .typeSorakaChampionDetailObj(let value):
            try container.encode(value)
        case .typeSwainChampionDetailObj(let value):
            try container.encode(value)
        case .typeSylasChampionDetailObj(let value):
            try container.encode(value)
        case .typeSyndraChampionDetailObj(let value):
            try container.encode(value)
        case .typeTahmKenchChampionDetailObj(let value):
            try container.encode(value)
        case .typeTaliyahChampionDetailObj(let value):
            try container.encode(value)
        case .typeTalonChampionDetailObj(let value):
            try container.encode(value)
        case .typeTaricChampionDetailObj(let value):
            try container.encode(value)
        case .typeTeemoChampionDetailObj(let value):
            try container.encode(value)
        case .typeThreshChampionDetailObj(let value):
            try container.encode(value)
        case .typeTristanaChampionDetailObj(let value):
            try container.encode(value)
        case .typeTrundleChampionDetailObj(let value):
            try container.encode(value)
        case .typeTryndamereChampionDetailObj(let value):
            try container.encode(value)
        case .typeTwistedFateChampionDetailObj(let value):
            try container.encode(value)
        case .typeTwitchChampionDetailObj(let value):
            try container.encode(value)
        case .typeUdyrChampionDetailObj(let value):
            try container.encode(value)
        case .typeUrgotChampionDetailObj(let value):
            try container.encode(value)
        case .typeVarusChampionDetailObj(let value):
            try container.encode(value)
        case .typeVayneChampionDetailObj(let value):
            try container.encode(value)
        case .typeVeigarChampionDetailObj(let value):
            try container.encode(value)
        case .typeVelkozChampionDetailObj(let value):
            try container.encode(value)
        case .typeVexChampionDetailObj(let value):
            try container.encode(value)
        case .typeViChampionDetailObj(let value):
            try container.encode(value)
        case .typeViegoChampionDetailObj(let value):
            try container.encode(value)
        case .typeViktorChampionDetailObj(let value):
            try container.encode(value)
        case .typeVladimirChampionDetailObj(let value):
            try container.encode(value)
        case .typeVolibearChampionDetailObj(let value):
            try container.encode(value)
        case .typeWarwickChampionDetailObj(let value):
            try container.encode(value)
        case .typeXayahChampionDetailObj(let value):
            try container.encode(value)
        case .typeXerathChampionDetailObj(let value):
            try container.encode(value)
        case .typeXinZhaoChampionDetailObj(let value):
            try container.encode(value)
        case .typeYasuoChampionDetailObj(let value):
            try container.encode(value)
        case .typeYoneChampionDetailObj(let value):
            try container.encode(value)
        case .typeYorickChampionDetailObj(let value):
            try container.encode(value)
        case .typeYuumiChampionDetailObj(let value):
            try container.encode(value)
        case .typeZacChampionDetailObj(let value):
            try container.encode(value)
        case .typeZedChampionDetailObj(let value):
            try container.encode(value)
        case .typeZeriChampionDetailObj(let value):
            try container.encode(value)
        case .typeZiggsChampionDetailObj(let value):
            try container.encode(value)
        case .typeZileanChampionDetailObj(let value):
            try container.encode(value)
        case .typeZoeChampionDetailObj(let value):
            try container.encode(value)
        case .typeZyraChampionDetailObj(let value):
            try container.encode(value)
        }
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.singleValueContainer()
        if let value = try? container.decode(AatroxChampionDetailObj.self) {
            self = .typeAatroxChampionDetailObj(value)
        } else if let value = try? container.decode(AhriChampionDetailObj.self) {
            self = .typeAhriChampionDetailObj(value)
        } else if let value = try? container.decode(AkaliChampionDetailObj.self) {
            self = .typeAkaliChampionDetailObj(value)
        } else if let value = try? container.decode(AkshanChampionDetailObj.self) {
            self = .typeAkshanChampionDetailObj(value)
        } else if let value = try? container.decode(AlistarChampionDetailObj.self) {
            self = .typeAlistarChampionDetailObj(value)
        } else if let value = try? container.decode(AmumuChampionDetailObj.self) {
            self = .typeAmumuChampionDetailObj(value)
        } else if let value = try? container.decode(AniviaChampionDetailObj.self) {
            self = .typeAniviaChampionDetailObj(value)
        } else if let value = try? container.decode(AnnieChampionDetailObj.self) {
            self = .typeAnnieChampionDetailObj(value)
        } else if let value = try? container.decode(ApheliosChampionDetailObj.self) {
            self = .typeApheliosChampionDetailObj(value)
        } else if let value = try? container.decode(AsheChampionDetailObj.self) {
            self = .typeAsheChampionDetailObj(value)
        } else if let value = try? container.decode(AurelionSolChampionDetailObj.self) {
            self = .typeAurelionSolChampionDetailObj(value)
        } else if let value = try? container.decode(AzirChampionDetailObj.self) {
            self = .typeAzirChampionDetailObj(value)
        } else if let value = try? container.decode(BardChampionDetailObj.self) {
            self = .typeBardChampionDetailObj(value)
        } else if let value = try? container.decode(BelvethChampionDetailObj.self) {
            self = .typeBelvethChampionDetailObj(value)
        } else if let value = try? container.decode(BlitzcrankChampionDetailObj.self) {
            self = .typeBlitzcrankChampionDetailObj(value)
        } else if let value = try? container.decode(BrandChampionDetailObj.self) {
            self = .typeBrandChampionDetailObj(value)
        } else if let value = try? container.decode(BraumChampionDetailObj.self) {
            self = .typeBraumChampionDetailObj(value)
        } else if let value = try? container.decode(BriarChampionDetailObj.self) {
            self = .typeBriarChampionDetailObj(value)
        } else if let value = try? container.decode(CaitlynChampionDetailObj.self) {
            self = .typeCaitlynChampionDetailObj(value)
        } else if let value = try? container.decode(CamilleChampionDetailObj.self) {
            self = .typeCamilleChampionDetailObj(value)
        } else if let value = try? container.decode(CassiopeiaChampionDetailObj.self) {
            self = .typeCassiopeiaChampionDetailObj(value)
        } else if let value = try? container.decode(ChogathChampionDetailObj.self) {
            self = .typeChogathChampionDetailObj(value)
        } else if let value = try? container.decode(CorkiChampionDetailObj.self) {
            self = .typeCorkiChampionDetailObj(value)
        } else if let value = try? container.decode(DariusChampionDetailObj.self) {
            self = .typeDariusChampionDetailObj(value)
        } else if let value = try? container.decode(DianaChampionDetailObj.self) {
            self = .typeDianaChampionDetailObj(value)
        } else if let value = try? container.decode(DrMundoChampionDetailObj.self) {
            self = .typeDrMundoChampionDetailObj(value)
        } else if let value = try? container.decode(DravenChampionDetailObj.self) {
            self = .typeDravenChampionDetailObj(value)
        } else if let value = try? container.decode(EkkoChampionDetailObj.self) {
            self = .typeEkkoChampionDetailObj(value)
        } else if let value = try? container.decode(EliseChampionDetailObj.self) {
            self = .typeEliseChampionDetailObj(value)
        } else if let value = try? container.decode(EvelynnChampionDetailObj.self) {
            self = .typeEvelynnChampionDetailObj(value)
        } else if let value = try? container.decode(EzrealChampionDetailObj.self) {
            self = .typeEzrealChampionDetailObj(value)
        } else if let value = try? container.decode(FiddlesticksChampionDetailObj.self) {
            self = .typeFiddlesticksChampionDetailObj(value)
        } else if let value = try? container.decode(FioraChampionDetailObj.self) {
            self = .typeFioraChampionDetailObj(value)
        } else if let value = try? container.decode(FizzChampionDetailObj.self) {
            self = .typeFizzChampionDetailObj(value)
        } else if let value = try? container.decode(GalioChampionDetailObj.self) {
            self = .typeGalioChampionDetailObj(value)
        } else if let value = try? container.decode(GangplankChampionDetailObj.self) {
            self = .typeGangplankChampionDetailObj(value)
        } else if let value = try? container.decode(GarenChampionDetailObj.self) {
            self = .typeGarenChampionDetailObj(value)
        } else if let value = try? container.decode(GnarChampionDetailObj.self) {
            self = .typeGnarChampionDetailObj(value)
        } else if let value = try? container.decode(GragasChampionDetailObj.self) {
            self = .typeGragasChampionDetailObj(value)
        } else if let value = try? container.decode(GravesChampionDetailObj.self) {
            self = .typeGravesChampionDetailObj(value)
        } else if let value = try? container.decode(GwenChampionDetailObj.self) {
            self = .typeGwenChampionDetailObj(value)
        } else if let value = try? container.decode(HecarimChampionDetailObj.self) {
            self = .typeHecarimChampionDetailObj(value)
        } else if let value = try? container.decode(HeimerdingerChampionDetailObj.self) {
            self = .typeHeimerdingerChampionDetailObj(value)
        } else if let value = try? container.decode(IllaoiChampionDetailObj.self) {
            self = .typeIllaoiChampionDetailObj(value)
        } else if let value = try? container.decode(IreliaChampionDetailObj.self) {
            self = .typeIreliaChampionDetailObj(value)
        } else if let value = try? container.decode(IvernChampionDetailObj.self) {
            self = .typeIvernChampionDetailObj(value)
        } else if let value = try? container.decode(JannaChampionDetailObj.self) {
            self = .typeJannaChampionDetailObj(value)
        } else if let value = try? container.decode(JarvanIVChampionDetailObj.self) {
            self = .typeJarvanIVChampionDetailObj(value)
        } else if let value = try? container.decode(JaxChampionDetailObj.self) {
            self = .typeJaxChampionDetailObj(value)
        } else if let value = try? container.decode(JayceChampionDetailObj.self) {
            self = .typeJayceChampionDetailObj(value)
        } else if let value = try? container.decode(JhinChampionDetailObj.self) {
            self = .typeJhinChampionDetailObj(value)
        } else if let value = try? container.decode(JinxChampionDetailObj.self) {
            self = .typeJinxChampionDetailObj(value)
        } else if let value = try? container.decode(KSanteChampionDetailObj.self) {
            self = .typeKSanteChampionDetailObj(value)
        } else if let value = try? container.decode(KaisaChampionDetailObj.self) {
            self = .typeKaisaChampionDetailObj(value)
        } else if let value = try? container.decode(KalistaChampionDetailObj.self) {
            self = .typeKalistaChampionDetailObj(value)
        } else if let value = try? container.decode(KarmaChampionDetailObj.self) {
            self = .typeKarmaChampionDetailObj(value)
        } else if let value = try? container.decode(KarthusChampionDetailObj.self) {
            self = .typeKarthusChampionDetailObj(value)
        } else if let value = try? container.decode(KassadinChampionDetailObj.self) {
            self = .typeKassadinChampionDetailObj(value)
        } else if let value = try? container.decode(KatarinaChampionDetailObj.self) {
            self = .typeKatarinaChampionDetailObj(value)
        } else if let value = try? container.decode(KayleChampionDetailObj.self) {
            self = .typeKayleChampionDetailObj(value)
        } else if let value = try? container.decode(KaynChampionDetailObj.self) {
            self = .typeKaynChampionDetailObj(value)
        } else if let value = try? container.decode(KennenChampionDetailObj.self) {
            self = .typeKennenChampionDetailObj(value)
        } else if let value = try? container.decode(KhazixChampionDetailObj.self) {
            self = .typeKhazixChampionDetailObj(value)
        } else if let value = try? container.decode(KindredChampionDetailObj.self) {
            self = .typeKindredChampionDetailObj(value)
        } else if let value = try? container.decode(KledChampionDetailObj.self) {
            self = .typeKledChampionDetailObj(value)
        } else if let value = try? container.decode(KogMawChampionDetailObj.self) {
            self = .typeKogMawChampionDetailObj(value)
        } else if let value = try? container.decode(LeblancChampionDetailObj.self) {
            self = .typeLeblancChampionDetailObj(value)
        } else if let value = try? container.decode(LeeSinChampionDetailObj.self) {
            self = .typeLeeSinChampionDetailObj(value)
        } else if let value = try? container.decode(LeonaChampionDetailObj.self) {
            self = .typeLeonaChampionDetailObj(value)
        } else if let value = try? container.decode(LilliaChampionDetailObj.self) {
            self = .typeLilliaChampionDetailObj(value)
        } else if let value = try? container.decode(LissandraChampionDetailObj.self) {
            self = .typeLissandraChampionDetailObj(value)
        } else if let value = try? container.decode(LucianChampionDetailObj.self) {
            self = .typeLucianChampionDetailObj(value)
        } else if let value = try? container.decode(LuluChampionDetailObj.self) {
            self = .typeLuluChampionDetailObj(value)
        } else if let value = try? container.decode(LuxChampionDetailObj.self) {
            self = .typeLuxChampionDetailObj(value)
        } else if let value = try? container.decode(MalphiteChampionDetailObj.self) {
            self = .typeMalphiteChampionDetailObj(value)
        } else if let value = try? container.decode(MalzaharChampionDetailObj.self) {
            self = .typeMalzaharChampionDetailObj(value)
        } else if let value = try? container.decode(MaokaiChampionDetailObj.self) {
            self = .typeMaokaiChampionDetailObj(value)
        } else if let value = try? container.decode(MasterYiChampionDetailObj.self) {
            self = .typeMasterYiChampionDetailObj(value)
        } else if let value = try? container.decode(MilioChampionDetailObj.self) {
            self = .typeMilioChampionDetailObj(value)
        } else if let value = try? container.decode(MissFortuneChampionDetailObj.self) {
            self = .typeMissFortuneChampionDetailObj(value)
        } else if let value = try? container.decode(MonkeyKingChampionDetailObj.self) {
            self = .typeMonkeyKingChampionDetailObj(value)
        } else if let value = try? container.decode(MordekaiserChampionDetailObj.self) {
            self = .typeMordekaiserChampionDetailObj(value)
        } else if let value = try? container.decode(MorganaChampionDetailObj.self) {
            self = .typeMorganaChampionDetailObj(value)
        } else if let value = try? container.decode(NaafiriChampionDetailObj.self) {
            self = .typeNaafiriChampionDetailObj(value)
        } else if let value = try? container.decode(NamiChampionDetailObj.self) {
            self = .typeNamiChampionDetailObj(value)
        } else if let value = try? container.decode(NasusChampionDetailObj.self) {
            self = .typeNasusChampionDetailObj(value)
        } else if let value = try? container.decode(NautilusChampionDetailObj.self) {
            self = .typeNautilusChampionDetailObj(value)
        } else if let value = try? container.decode(NeekoChampionDetailObj.self) {
            self = .typeNeekoChampionDetailObj(value)
        } else if let value = try? container.decode(NidaleeChampionDetailObj.self) {
            self = .typeNidaleeChampionDetailObj(value)
        } else if let value = try? container.decode(NilahChampionDetailObj.self) {
            self = .typeNilahChampionDetailObj(value)
        } else if let value = try? container.decode(NocturneChampionDetailObj.self) {
            self = .typeNocturneChampionDetailObj(value)
        } else if let value = try? container.decode(NunuChampionDetailObj.self) {
            self = .typeNunuChampionDetailObj(value)
        } else if let value = try? container.decode(OlafChampionDetailObj.self) {
            self = .typeOlafChampionDetailObj(value)
        } else if let value = try? container.decode(OriannaChampionDetailObj.self) {
            self = .typeOriannaChampionDetailObj(value)
        } else if let value = try? container.decode(OrnnChampionDetailObj.self) {
            self = .typeOrnnChampionDetailObj(value)
        } else if let value = try? container.decode(PantheonChampionDetailObj.self) {
            self = .typePantheonChampionDetailObj(value)
        } else if let value = try? container.decode(PoppyChampionDetailObj.self) {
            self = .typePoppyChampionDetailObj(value)
        } else if let value = try? container.decode(PykeChampionDetailObj.self) {
            self = .typePykeChampionDetailObj(value)
        } else if let value = try? container.decode(QiyanaChampionDetailObj.self) {
            self = .typeQiyanaChampionDetailObj(value)
        } else if let value = try? container.decode(QuinnChampionDetailObj.self) {
            self = .typeQuinnChampionDetailObj(value)
        } else if let value = try? container.decode(RakanChampionDetailObj.self) {
            self = .typeRakanChampionDetailObj(value)
        } else if let value = try? container.decode(RammusChampionDetailObj.self) {
            self = .typeRammusChampionDetailObj(value)
        } else if let value = try? container.decode(RekSaiChampionDetailObj.self) {
            self = .typeRekSaiChampionDetailObj(value)
        } else if let value = try? container.decode(RellChampionDetailObj.self) {
            self = .typeRellChampionDetailObj(value)
        } else if let value = try? container.decode(RenataChampionDetailObj.self) {
            self = .typeRenataChampionDetailObj(value)
        } else if let value = try? container.decode(RenektonChampionDetailObj.self) {
            self = .typeRenektonChampionDetailObj(value)
        } else if let value = try? container.decode(RengarChampionDetailObj.self) {
            self = .typeRengarChampionDetailObj(value)
        } else if let value = try? container.decode(RivenChampionDetailObj.self) {
            self = .typeRivenChampionDetailObj(value)
        } else if let value = try? container.decode(RumbleChampionDetailObj.self) {
            self = .typeRumbleChampionDetailObj(value)
        } else if let value = try? container.decode(RyzeChampionDetailObj.self) {
            self = .typeRyzeChampionDetailObj(value)
        } else if let value = try? container.decode(SamiraChampionDetailObj.self) {
            self = .typeSamiraChampionDetailObj(value)
        } else if let value = try? container.decode(SejuaniChampionDetailObj.self) {
            self = .typeSejuaniChampionDetailObj(value)
        } else if let value = try? container.decode(SennaChampionDetailObj.self) {
            self = .typeSennaChampionDetailObj(value)
        } else if let value = try? container.decode(SeraphineChampionDetailObj.self) {
            self = .typeSeraphineChampionDetailObj(value)
        } else if let value = try? container.decode(SettChampionDetailObj.self) {
            self = .typeSettChampionDetailObj(value)
        } else if let value = try? container.decode(ShacoChampionDetailObj.self) {
            self = .typeShacoChampionDetailObj(value)
        } else if let value = try? container.decode(ShenChampionDetailObj.self) {
            self = .typeShenChampionDetailObj(value)
        } else if let value = try? container.decode(ShyvanaChampionDetailObj.self) {
            self = .typeShyvanaChampionDetailObj(value)
        } else if let value = try? container.decode(SingedChampionDetailObj.self) {
            self = .typeSingedChampionDetailObj(value)
        } else if let value = try? container.decode(SionChampionDetailObj.self) {
            self = .typeSionChampionDetailObj(value)
        } else if let value = try? container.decode(SivirChampionDetailObj.self) {
            self = .typeSivirChampionDetailObj(value)
        } else if let value = try? container.decode(SkarnerChampionDetailObj.self) {
            self = .typeSkarnerChampionDetailObj(value)
        } else if let value = try? container.decode(SonaChampionDetailObj.self) {
            self = .typeSonaChampionDetailObj(value)
        } else if let value = try? container.decode(SorakaChampionDetailObj.self) {
            self = .typeSorakaChampionDetailObj(value)
        } else if let value = try? container.decode(SwainChampionDetailObj.self) {
            self = .typeSwainChampionDetailObj(value)
        } else if let value = try? container.decode(SylasChampionDetailObj.self) {
            self = .typeSylasChampionDetailObj(value)
        } else if let value = try? container.decode(SyndraChampionDetailObj.self) {
            self = .typeSyndraChampionDetailObj(value)
        } else if let value = try? container.decode(TahmKenchChampionDetailObj.self) {
            self = .typeTahmKenchChampionDetailObj(value)
        } else if let value = try? container.decode(TaliyahChampionDetailObj.self) {
            self = .typeTaliyahChampionDetailObj(value)
        } else if let value = try? container.decode(TalonChampionDetailObj.self) {
            self = .typeTalonChampionDetailObj(value)
        } else if let value = try? container.decode(TaricChampionDetailObj.self) {
            self = .typeTaricChampionDetailObj(value)
        } else if let value = try? container.decode(TeemoChampionDetailObj.self) {
            self = .typeTeemoChampionDetailObj(value)
        } else if let value = try? container.decode(ThreshChampionDetailObj.self) {
            self = .typeThreshChampionDetailObj(value)
        } else if let value = try? container.decode(TristanaChampionDetailObj.self) {
            self = .typeTristanaChampionDetailObj(value)
        } else if let value = try? container.decode(TrundleChampionDetailObj.self) {
            self = .typeTrundleChampionDetailObj(value)
        } else if let value = try? container.decode(TryndamereChampionDetailObj.self) {
            self = .typeTryndamereChampionDetailObj(value)
        } else if let value = try? container.decode(TwistedFateChampionDetailObj.self) {
            self = .typeTwistedFateChampionDetailObj(value)
        } else if let value = try? container.decode(TwitchChampionDetailObj.self) {
            self = .typeTwitchChampionDetailObj(value)
        } else if let value = try? container.decode(UdyrChampionDetailObj.self) {
            self = .typeUdyrChampionDetailObj(value)
        } else if let value = try? container.decode(UrgotChampionDetailObj.self) {
            self = .typeUrgotChampionDetailObj(value)
        } else if let value = try? container.decode(VarusChampionDetailObj.self) {
            self = .typeVarusChampionDetailObj(value)
        } else if let value = try? container.decode(VayneChampionDetailObj.self) {
            self = .typeVayneChampionDetailObj(value)
        } else if let value = try? container.decode(VeigarChampionDetailObj.self) {
            self = .typeVeigarChampionDetailObj(value)
        } else if let value = try? container.decode(VelkozChampionDetailObj.self) {
            self = .typeVelkozChampionDetailObj(value)
        } else if let value = try? container.decode(VexChampionDetailObj.self) {
            self = .typeVexChampionDetailObj(value)
        } else if let value = try? container.decode(ViChampionDetailObj.self) {
            self = .typeViChampionDetailObj(value)
        } else if let value = try? container.decode(ViegoChampionDetailObj.self) {
            self = .typeViegoChampionDetailObj(value)
        } else if let value = try? container.decode(ViktorChampionDetailObj.self) {
            self = .typeViktorChampionDetailObj(value)
        } else if let value = try? container.decode(VladimirChampionDetailObj.self) {
            self = .typeVladimirChampionDetailObj(value)
        } else if let value = try? container.decode(VolibearChampionDetailObj.self) {
            self = .typeVolibearChampionDetailObj(value)
        } else if let value = try? container.decode(WarwickChampionDetailObj.self) {
            self = .typeWarwickChampionDetailObj(value)
        } else if let value = try? container.decode(XayahChampionDetailObj.self) {
            self = .typeXayahChampionDetailObj(value)
        } else if let value = try? container.decode(XerathChampionDetailObj.self) {
            self = .typeXerathChampionDetailObj(value)
        } else if let value = try? container.decode(XinZhaoChampionDetailObj.self) {
            self = .typeXinZhaoChampionDetailObj(value)
        } else if let value = try? container.decode(YasuoChampionDetailObj.self) {
            self = .typeYasuoChampionDetailObj(value)
        } else if let value = try? container.decode(YoneChampionDetailObj.self) {
            self = .typeYoneChampionDetailObj(value)
        } else if let value = try? container.decode(YorickChampionDetailObj.self) {
            self = .typeYorickChampionDetailObj(value)
        } else if let value = try? container.decode(YuumiChampionDetailObj.self) {
            self = .typeYuumiChampionDetailObj(value)
        } else if let value = try? container.decode(ZacChampionDetailObj.self) {
            self = .typeZacChampionDetailObj(value)
        } else if let value = try? container.decode(ZedChampionDetailObj.self) {
            self = .typeZedChampionDetailObj(value)
        } else if let value = try? container.decode(ZeriChampionDetailObj.self) {
            self = .typeZeriChampionDetailObj(value)
        } else if let value = try? container.decode(ZiggsChampionDetailObj.self) {
            self = .typeZiggsChampionDetailObj(value)
        } else if let value = try? container.decode(ZileanChampionDetailObj.self) {
            self = .typeZileanChampionDetailObj(value)
        } else if let value = try? container.decode(ZoeChampionDetailObj.self) {
            self = .typeZoeChampionDetailObj(value)
        } else if let value = try? container.decode(ZyraChampionDetailObj.self) {
            self = .typeZyraChampionDetailObj(value)
        } else {
            throw DecodingError.typeMismatch(Self.Type.self, .init(codingPath: decoder.codingPath, debugDescription: "Unable to decode instance of ChampionDetailDataData"))
        }
    }
}

